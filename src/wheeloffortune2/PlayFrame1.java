package wheeloffortune2;

import java.awt.Color;
import java.awt.*;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author annak
 */
public class PlayFrame1 extends javax.swing.JFrame {

    private PlayFrame2 secondFrame;
    GamePlay firstWindow;

    private PlayFrame3 thirdFrame;
    private String username;
    private int highscore;
    private ArrayList<Phrase> phrases;
    private Phrase p;
    private SelectionWheel selectionWheel;
    private Player player;
    private int spinMoney;
    private int spinsLeft;
    private JButton spin;
    private JButton guess;

    public PlayFrame1(GamePlay f) {

        DecimalFormat money = new DecimalFormat("$0.00");
        firstWindow = f;

        if (thirdFrame != null) {
            player = thirdFrame.getPlayer();
            // use player
        } else {
            player = firstWindow.getPlayer();

        }
        spinsLeft = player.getSpinsLeft();
        username = firstWindow.getUsername();
        phrases = firstWindow.getPhrases();
        highscore = player.getHighscore();
        
        initComponents();
        //currentEarningsLabel.setText("Current Earnings:  " + money.format(highscore));
        currentEarningsLabel.setText("Current Earnings:  ");
        spinsLeftLabel.setText("Spins Left:    " + spinsLeft);
        try {
            ArrayList<String> list = new ArrayList<String>();
            list.add("$600");
            list.add("$500");
            list.add("$550");
            list.add("$600");
            list.add("$650");
            list.add("Bankruptcy");
            list.add("$650");
            list.add("$500");
            list.add("$600");
            list.add("$650");
            list.add("Bankruptcy");
            list.add("$550");
            list.add("$600");
            list.add("$650");
            list.add("Bankruptcy");

            selectionWheel = new SelectionWheel(list);
            selectionWheel.hasBorders(true);

            wheelPanel.setLayout(new java.awt.FlowLayout(FlowLayout.CENTER, 0, 0));
            wheelPanel.add(selectionWheel);

        } catch (Exception e) {
            e.printStackTrace();
        }

        wheelPanel.revalidate();
        wheelPanel.repaint();
        spin = spinButton1;
        guess = guessPhraseButton;

    }
    public int spinMoney(){
        return spinMoney;
    }
    public String getUsername() {
        return username;
    }

    public Player getPlayer() {
        return firstWindow.getPlayer();
    }

    public int getSpinMoney() {
        return spinMoney;
    }

    public int getSpinsLeft() {
        return spinsLeft;
    }

    public GamePlay getFirstWindow() {
        return firstWindow;
    }

    public JButton getSpin() {
        return spin;
    }

    public JButton getGuess() {
        return guess;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        spinsLeftLabel = new javax.swing.JLabel();
        currentEarningsLabel = new javax.swing.JLabel();
        guessPhraseButton = new javax.swing.JButton();
        spinMoneyLabel = new javax.swing.JLabel();
        spinButton1 = new javax.swing.JButton();
        wheelPanel = new javax.swing.JPanel();
        moneyLabel = new javax.swing.JLabel();
        currentEarningsLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 51, 204));

        spinsLeftLabel.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        spinsLeftLabel.setForeground(new java.awt.Color(255, 255, 255));
        spinsLeftLabel.setText("Spins Left:");

        currentEarningsLabel.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        currentEarningsLabel.setForeground(new java.awt.Color(255, 255, 255));
        currentEarningsLabel.setText("Current Earnings:");

        guessPhraseButton.setBackground(new java.awt.Color(255, 255, 102));
        guessPhraseButton.setFont(new java.awt.Font("MS UI Gothic", 1, 21)); // NOI18N
        guessPhraseButton.setForeground(new java.awt.Color(0, 51, 204));
        guessPhraseButton.setText("Next: Guess Phrase");
        guessPhraseButton.setToolTipText("");
        guessPhraseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessPhraseButtonActionPerformed(evt);
            }
        });

        spinMoneyLabel.setFont(new java.awt.Font("MS UI Gothic", 1, 24)); // NOI18N
        spinMoneyLabel.setForeground(new java.awt.Color(255, 255, 255));
        spinMoneyLabel.setText("Spin Money:");

        spinButton1.setBackground(new java.awt.Color(255, 255, 102));
        spinButton1.setFont(new java.awt.Font("MS UI Gothic", 1, 48)); // NOI18N
        spinButton1.setForeground(new java.awt.Color(0, 51, 204));
        spinButton1.setText("SPIN WHEEL");
        spinButton1.setToolTipText("");
        spinButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spinButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout wheelPanelLayout = new javax.swing.GroupLayout(wheelPanel);
        wheelPanel.setLayout(wheelPanelLayout);
        wheelPanelLayout.setHorizontalGroup(
            wheelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 451, Short.MAX_VALUE)
        );
        wheelPanelLayout.setVerticalGroup(
            wheelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 344, Short.MAX_VALUE)
        );

        moneyLabel.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        moneyLabel.setForeground(new java.awt.Color(255, 255, 255));
        moneyLabel.setPreferredSize(new java.awt.Dimension(57, 51));

        currentEarningsLabel1.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        currentEarningsLabel1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(wheelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(spinsLeftLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentEarningsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentEarningsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(spinButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(spinMoneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(moneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(guessPhraseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentEarningsLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(spinsLeftLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(currentEarningsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addComponent(spinButton1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(moneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(guessPhraseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinMoneyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(wheelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guessPhraseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessPhraseButtonActionPerformed

        
        ArrayList<Phrase> copy = (ArrayList<Phrase>) phrases.clone();
        int rNum = (int) (Math.random() * copy.size()) + 0;
        p = copy.get(rNum);
        copy.remove(p);
        
        System.out.println(p);

        if (secondFrame == null) {
            secondFrame = new PlayFrame2(this);
        }

        String answer;
        String answerSplit[];
        int count;
        int totalCount = 0;

        answer = p.getAnswer();
        
        System.out.println(answer);
        answerSplit = answer.split(" ");

        TextField letters[] = secondFrame.getLetters();

        for (int j = 0; j < letters.length; j++) {
            letters[j].setText("");
        }

        for (int i = 0; i < answerSplit.length; i++) {
            count = answerSplit[i].length();
            for (int j = totalCount; j < count + totalCount; j++) {
                letters[j].setBackground(Color.green);
            }

            if (i < answerSplit.length - 1) {
                letters[totalCount + count].setBackground(Color.white);
            }

            totalCount += count + 1;

        }

        JTextField clue = secondFrame.getClueField();
        clue.setText(p.getQuestion());
        
        secondFrame.pack();
        secondFrame.repaint();
        
        secondFrame.setP(p);
        secondFrame.setAnswer(answer);
        secondFrame.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_guessPhraseButtonActionPerformed

    public Phrase getPhrase() {
        return p;
    }

    private void spinButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spinButton1ActionPerformed
        DecimalFormat money = new DecimalFormat("$0.00");
        currentEarningsLabel1.setVisible(false);
        spin.setEnabled(false); // disable spin button while spinning
        selectionWheel.setRotationAngle(Math.random() * 360);
        moneyLabel.setVisible(false);

        try {
            selectionWheel.spinStartAsync(300, -1, -50);

            Timer tickTimer = new Timer(33, e -> selectionWheel.repaintTick());
            tickTimer.start();

            new Thread(() -> {
                while (selectionWheel.isSpinning()) {
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException ignored) {
                    }
                }

                tickTimer.stop();

                SwingUtilities.invokeLater(()
                        -> moneyLabel.setVisible(true));
                currentEarningsLabel1.setVisible(true);
                guess.setEnabled(true);

            }).start();

        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
        String result = selectionWheel.getSelectedString();

        if (result.equalsIgnoreCase("Bankruptcy")) {
            result = "$500";
        }

        moneyLabel.setText(result);
        spinMoney = Integer.parseInt(result.substring(1));
        String total = String.valueOf(spinMoney + player.getHighscore());//why are we adding the spin money isnt that for when they are guessing? should it not just be their highscore as the time?
        int Itotal = (spinMoney + player.getHighscore());
        currentEarningsLabel1.setText(total);
        spinsLeft -= 1;
        spinsLeftLabel.setText("Spins Left:    " + spinsLeft);
        player.setSpinsLeft(spinsLeft); // or spinsLeft -= 1;
        player.setHighscore(Itotal);


    }//GEN-LAST:event_spinButton1ActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel currentEarningsLabel;
    private javax.swing.JLabel currentEarningsLabel1;
    private javax.swing.JButton guessPhraseButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JButton spinButton1;
    private javax.swing.JLabel spinMoneyLabel;
    private javax.swing.JLabel spinsLeftLabel;
    private javax.swing.JPanel wheelPanel;
    // End of variables declaration//GEN-END:variables
}
